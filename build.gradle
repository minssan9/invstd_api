import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.22'
}
apply plugin: 'idea'


ext {
    kotlinVersion = '1.5.21'

    projectGroup = 'com.voyagers'
    springBootVersion = '3.1.2'
    lombokVersion = '1.18.18'
    projectVersion = '0.0.1-' + new Date().format('yyyyMMddHHmmss')
}

group = 'com.voyagers'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven { url = uri("https://repo.spring.io/milestone") }
    maven { url = uri("https://repo.spring.io/snapshot") }
    maven { url = uri("https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates") }
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    group projectGroup
    version '1.0'
    sourceCompatibility = '17'
    configurations {
        compileOnly { extendsFrom annotationProcessor }
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
        implementation "org.springframework.boot:spring-boot-starter-webflux"
        implementation "org.springframework.boot:spring-boot-starter-web"


        // Retrofit
        implementation 'com.squareup.retrofit2:retrofit:2.9.0'
        implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

        // Coroutine support for Retrofit
//        implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'
//        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
//        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-servlet:1.5.0"


        compileOnly("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok")

        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

        implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            freeCompilerArgs += '-Xjsr305=strict'
            jvmTarget = '17'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
